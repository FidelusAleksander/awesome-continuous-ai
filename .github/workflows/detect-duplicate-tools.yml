name: Detect Duplicate Tools
on:
  workflow_dispatch:
  push:
    paths:
      - 'README.md'
  pull_request:
    paths:
      - 'README.md'
permissions:
  contents: read
  issues: write
  pull-requests: write
  models: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  detect-duplicates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read README content
        id: readme
        run: echo "content<<EOF" >> $GITHUB_OUTPUT && cat README.md >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

      - name: Detect duplicate tools in README.md
        uses: actions/ai-inference@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          model: openai/gpt-4.1
          system-prompt: |
            Please analyze the README.md content and detect any duplicate
            tool entries. Look for:

            1. Tools with the same GitHub repository URL (exact matches)
            2. Tools with very similar names (case-insensitive, ignoring
               punctuation)
            3. Tools that appear to be the same product but listed in
               different sections

            Focus on the bulleted lists under each section heading. Each
            tool entry typically follows the format:
            * [Tool Name](URL) - description

            If duplicates are found, please provide:
            - The duplicate entries with their section locations
            - The specific URLs or tool names that match
            - A recommendation on whether they should be consolidated or if
              they serve different purposes

            Use GitHub-flavored Markdown for formatting your response.

            If no duplicates are found, simply respond with "/OK/"

            Here is the README.md content to analyze:
          prompt: |
            ${{ steps.readme.outputs.content }}
          max-tokens: 7000
      - name: If duplicates create issue
        if: contains(steps.detect-duplicates.outputs.response, '/OK/') == false
        run: |
          echo "Creating issue for detected duplicates..."
          gh issue create --title "Duplicate Tools Detected" \
            --body "${{ steps.detect-duplicates.outputs.response }}" \
